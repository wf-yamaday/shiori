import Head from 'next/head'
import React, { useCallback, useEffect, useState } from 'react';
import styles from '../styles/Home.module.css'
import axios from 'axios'

async function getOGP(url: string) {
  if(url === '') return Promise.resolve({});
  return axios.get(`https://us-central1-shiori-dev-160df.cloudfunctions.net/getOgp?url=${url}`)
  .then((res) => { console.log('[info]', res.data); return res.data; })
  .catch((err) => { return Promise.reject(err) })
}

async function handleSubmit() {
}

export default function Home() {

  const [url, setUrl] = useState<string>('');
  const [memo, setMemo] = useState<string>('');
  const [ogp, setOgp] = useState<Object>({});

  const onChangeInputUrl = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {
    setUrl(event.target.value);
  }, [])

  const onChangeInputMemo = useCallback((event: React.ChangeEvent<HTMLTextAreaElement>) => {
    setMemo(event.target.value);
  }, [])

  const getOgpContent = useCallback(async () => {
      const ogpObject = await getOGP(url);
      console.log('[debug]', ogpObject);
      if(ogpObject[url] !== undefined && ogpObject !== {}) {
        setOgp(ogpObject[url])
      } else {
        setOgp({})
      }
  }, [ogp])

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.container}>
        <h1 className={styles.title}>栞 - Shiori -</h1>
        <div className={styles.formContent}>
          <input
            className={styles.formItem}
            value={url}
            onChange={onChangeInputUrl}
            placeholder="ブックマークするページのURL"
            onBlur={() => getOgpContent()}
          />
            {ogp.hasOwnProperty('og:title') ?
            <div className="ogp-box">
              <div className="text">
                <p className="title">{ogp['og:title']}</p>
                {ogp.hasOwnProperty('og:description')? <span className="description">{ogp['og:description']}</span> : null}
              </div>
              {ogp.hasOwnProperty('og:image')? <img className="img" src={ogp['og:image']} /> : null}
            </div> : null}
          <textarea
            className={styles.formItem}
            value={memo}
            onChange={onChangeInputMemo}
            placeholder="メモ"
          />
          <button className={`${styles.formItem} btn`} type="button" onClick={() => handleSubmit()}>ブックマーク</button>
        </div>
      </main>

      <footer className={styles.footer}>
        wf-yamaday
      </footer>
    </div>
  )
}
